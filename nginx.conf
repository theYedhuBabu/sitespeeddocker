# /etc/nginx/conf.d/default.conf

server {
    # Nginx will listen on port 80 within this container.
    listen 80;
    # Server name (can be localhost or your domain if configured).
    server_name localhost;

    # Increase the maximum allowed size of the client request body.
    # Useful for file uploads. 100M should be sufficient for most cases.
    client_max_body_size 100M;

    # Root directory for serving static files (index.html, style.css, script.js, results.html, etc.).
    # This path is inside the Nginx container.
    root /usr/share/nginx/html;
    # Default file to serve if a directory is requested.
    index index.html index.htm;

    # Location block for the root path and other static assets.
    location / {
        # Tries to serve the requested file directly.
        # If it's a directory, it looks for an index file (defined by 'index' directive).
        # If no file is found, it returns a 404 error.
        try_files $uri $uri/ /index.html;
    }

    # Location block for API requests.
    # All requests starting with /api/ will be proxied to the Node.js backend.
    location /api {
        # The Node.js server (server.js) is expected to be running on port 3000
        # within the same container (or on the 'web' service if it were a different container).
        # Since server.js is in the same container, 127.0.0.1 (localhost) is appropriate.
        proxy_pass http://127.0.0.1:3000;

        # Set headers to pass along client information to the backend.
        proxy_set_header Host $host; # Preserves the original host header.
        proxy_set_header X-Real-IP $remote_addr; # Passes the client's real IP address.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # List of IPs if behind multiple proxies.
        proxy_set_header X-Forwarded-Proto $scheme; # http or https.
    }

    # Location block for serving uploaded files.
    # Files uploaded via the Node.js app are stored in /app/uploads (inside the container).
    # This alias tells Nginx to serve requests to /uploads/ from that directory.
    location /uploads {
        alias /app/uploads;
        # Optional: Add caching headers or access controls if needed.
        # autoindex on; # Consider if you want directory listing (usually off for uploads).
    }

    # Location block for serving Sitespeed.io HTML result files.
    # These results are generated by Sitespeed.io and written to a volume
    # mapped to /usr/share/nginx/html/results inside this container.
    location /results/ {
        alias /usr/share/nginx/html/results/;
        # try_files attempts to serve the exact URI, then the URI as a directory.
        # The fallback to /results/sitespeed-result/index.html might be specific
        # to a particular output structure and may not always be correct.
        # A simpler approach is often just 'try_files $uri $uri/ =404;' if you rely on direct links.
        try_files $uri $uri/ /index.html; # Fallback to main index if specific result not found, or use =404
        
        # autoindex on allows browsing the directory structure of the results.
        # This can be useful for users to find their reports if they don't have a direct link.
        autoindex on;
    }

    # You can add other location blocks for specific error pages or other paths if needed.
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}
